DROP SCHEMA IF EXISTS  DIPLOMA_TEST CASCADE ;
CREATE SCHEMA DIPLOMA_TEST;

CREATE TABLE DIPLOMA_TEST.ROLES
(
    ID   SERIAL PRIMARY KEY,
    NAME VARCHAR(20)
);

CREATE TABLE DIPLOMA_TEST.USERS
(
    ID         UUID         NOT NULL PRIMARY KEY,
    FIRST_NAME VARCHAR(50) NOT NULL,
    LAST_NAME  VARCHAR(50) NOT NULL,
    PATRONYMIC VARCHAR(50),
    EMAIL      VARCHAR(50),
    LOGIN      VARCHAR(50),
    PASSWORD   VARCHAR(50)
);

CREATE TABLE DIPLOMA_TEST.USER_ROLES
(
    USER_ID UUID    NOT NULL REFERENCES DIPLOMA_TEST.USERS,
    ROLE_ID INTEGER NOT NULL REFERENCES DIPLOMA_TEST.ROLES,
    PRIMARY KEY (USER_ID, ROLE_ID)
);

CREATE TABLE DIPLOMA_TEST.TEACHERS
(
    ID UUID NOT NULL PRIMARY KEY CONSTRAINT TEACHER_USER_REFERENCE REFERENCES DIPLOMA_TEST.USERS
);

CREATE TABLE DIPLOMA_TEST.ROOMS
(
    ID         UUID         NOT NULL PRIMARY KEY,
    ROOM_NAME  VARCHAR(100) NOT NULL,
    TEACHER_ID UUID CONSTRAINT TEACHER_ROOM_REFERENCE REFERENCES DIPLOMA_TEST.TEACHERS
);

CREATE TABLE DIPLOMA_TEST.GROUPS
(
    ID         UUID         NOT NULL PRIMARY KEY,
    GROUP_NAME VARCHAR(100) NOT NULL CONSTRAINT UNIQUE_GROUP_NAME UNIQUE
);

CREATE TABLE DIPLOMA_TEST.SUBJECTS
(
    ID           UUID NOT NULL PRIMARY KEY,
    SUBJECT_NAME VARCHAR(100),
    ROOM_ID      UUID CONSTRAINT SUBJECT_ROOM_REFERENCE REFERENCES DIPLOMA_TEST.ROOMS,
    TEACHER_ID   UUID CONSTRAINT SUBJECT_TEACHER_REFERENCE REFERENCES DIPLOMA_TEST.TEACHERS
);

CREATE TABLE DIPLOMA_TEST.SUBJECTS_GROUPS
(
    SUBJECTS_ID UUID NOT NULL CONSTRAINT SUBJECT_ID_REFERENCE REFERENCES DIPLOMA_TEST.SUBJECTS,
    GROUPS_ID   UUID NOT NULL CONSTRAINT GROUP_ID_REFERENCE REFERENCES DIPLOMA_TEST.GROUPS,
    PRIMARY KEY (SUBJECTS_ID, GROUPS_ID)
);

CREATE TABLE DIPLOMA_TEST.MATERIALS
(
    ID            UUID         NOT NULL PRIMARY KEY,
    MATERIAL_NAME VARCHAR(100) NOT NULL,
    TEXT          VARCHAR(4000),
    SUBJECT_ID    UUID CONSTRAINT MATERIAL_SUBJECT_REFERENCE REFERENCES DIPLOMA_TEST.SUBJECTS,
    TEACHER_ID    UUID CONSTRAINT MATERIAL_TEACHER_REFERENCE REFERENCES DIPLOMA_TEST.TEACHERS
);

CREATE TABLE DIPLOMA_TEST.TASKS
(
    ID                    UUID         NOT NULL PRIMARY KEY,
    DATE_OF_CREATION      TIMESTAMP,
    TASK_NAME             VARCHAR(100) NOT NULL,
    TEXT                  VARCHAR(4000),
    SUBJECT_ID            UUID CONSTRAINT TASK_SUBJECT_REFERENCE REFERENCES DIPLOMA_TEST.SUBJECTS,
    TEACHER_ID            UUID CONSTRAINT TASK_TEACHER_REFERENCE REFERENCES DIPLOMA_TEST.TEACHERS
);

CREATE TABLE DIPLOMA_TEST.STUDENTS
(
    ID       UUID NOT NULL PRIMARY KEY CONSTRAINT STUDENT_USER_REFERENCE REFERENCES DIPLOMA_TEST.USERS,
    GROUP_ID UUID CONSTRAINT STUDENT_GROUP_REFERENCE REFERENCES DIPLOMA_TEST.GROUPS
);


CREATE TABLE DIPLOMA_TEST.GROUPS_ROOMS
(
    GROUPS_ID UUID NOT NULL CONSTRAINT GROUP_REFERENCE REFERENCES DIPLOMA_TEST.GROUPS,
    ROOMS_ID  UUID NOT NULL CONSTRAINT ROOM_REFERENCE REFERENCES DIPLOMA_TEST.ROOMS,
    PRIMARY KEY (GROUPS_ID, ROOMS_ID)
);


CREATE TABLE DIPLOMA_TEST.SOLUTIONS
(
    ID               UUID NOT NULL PRIMARY KEY,
    DATE_OF_DELIVERY TIMESTAMP,
    TEXT             VARCHAR(4000),
    STUDENT_ID       UUID CONSTRAINT STUDENT_REFERENCE REFERENCES DIPLOMA_TEST.STUDENTS,
    TASK_ID          UUID CONSTRAINT TASK_REFERENCE REFERENCES DIPLOMA_TEST.TASKS
);

CREATE TABLE DIPLOMA_TEST.EXAMINATIONS
(
    ID                 UUID NOT NULL PRIMARY KEY,
    DATE_OF_VALUATION  TIMESTAMP,
    EXAMINATION_STATUS VARCHAR(20),
    SOLUTION_ID        UUID CONSTRAINT SOLUTION_REFERENCE REFERENCES DIPLOMA_TEST.SOLUTIONS
);